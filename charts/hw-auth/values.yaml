# Default values for hw-auth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image: nolife1349/auth-service

configMapName: auth-svc-properties
secret: auth-svc-secret
containerPort: 8001

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8001
  targetPort: 8001


ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: $1
  hosts:
    - host: arch.homework
      paths:
        - path: "/otusapp/gorbunov(/auth/.*|/auth)"
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
#nginx-ingress:
#  controller:
#    service:
#      enableHttps: false
#      type: NodePort
#      nodePorts:
#        http: 32080
#  resources:
#   limits:
#     cpu: 500m
#     memory: 256Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi
#

#controller:
#  service:
#    enableHttps: false
#    type: NodePort
#    nodePorts:
#      http: 32080
#defaultBackend:
#  resources:
#    limits:
#      cpu: 500m
#      memory: 256Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

registerservices:
  name: usr-hw5-user

postgresql:
  enabled: true
  postgresqlUsername: user
  postgresqlPassword: passwd
  postgresqlDatabase: user_info
  postgresqlSchema: public
  service:
    port: "5432"